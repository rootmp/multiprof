package l2s.gameserver.network.l2.s2c;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import l2s.gameserver.data.xml.holder.ProductDataHolder;
import l2s.gameserver.model.Player;
import l2s.gameserver.templates.item.product.ProductItem;
import l2s.gameserver.templates.item.product.ProductItemComponent;
import l2s.gameserver.utils.ItemFunctions;

/**
 * @author Bonux
 **/
public class ReciveVipProductList extends L2GameServerPacket
{
	private final long _adena, _silverCoins, _goldCoins;
	private final List<ProductItem> _products = new ArrayList<ProductItem>();

	public ReciveVipProductList(Player player)
	{
		_adena = player.getAdena();
		_silverCoins = ItemFunctions.getItemCount(player, 29983);
		_goldCoins = ItemFunctions.getItemCount(player, 29984);
		_products.addAll(ProductDataHolder.getInstance().getProductsOnSale(player));
		Collections.sort(_products);
	}

	@Override
	protected void writeImpl()
	{
		
		writeQ(_adena); // Player Adena Count
		writeQ(_goldCoins);
		writeQ(_silverCoins);
		writeC(0x01); // UNK
		writeD(_products.size());
		for (ProductItem product : _products)
		{
			writeD(product.getId()); // product id
			writeC(product.getCategory()); // 11 - припасы, 12 - снаряжение, 13 - VIP, 14 - ивент, 15 - наградные монеты
			writeC(product.getCategory() == 15 ? 3 : 0); // UNK, 0x03 - при типе = 15, при остальных = 0x00
			writeD(product.getCategory() == 15 ? product.getGoldCoinCount() : product.getPrice()); // Price in NC or
																									// Lucky Coins
			writeD(product.getCategory() == 15 ? product.getSilverCoinCount() : 0); // Price in VIP Coins
			writeC(product.isNew() ? 6 : (product.isHot() ? 5 : 0)); // 5 - hot, 6 - new
			writeC(product.getMinVipLevel()); // Min VIP level
			writeC(product.getMaxVipLevel()); // Max VIP level

			writeC(product.getComponents().size()); // Количество итемов в продукте.
			for (ProductItemComponent component : product.getComponents())
			{
				writeD(component.getId()); // item id
				writeD((int) component.getCount()); // quality
			}
		}
	}
}